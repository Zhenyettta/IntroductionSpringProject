{
	"info": {
		"_postman_id": "3dd974ee-b980-4d71-b7cb-0dda725f1650",
		"name": "ApiTest",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "28209250",
		"_collection_link": "https://bold-spaceship-153963.postman.co/workspace/SpringBoot~d59bcbf3-8af7-4be6-97e4-50f4e06aef14/collection/28209250-3dd974ee-b980-4d71-b7cb-0dda725f1650?action=share&source=collection_link&creator=28209250"
	},
	"item": [
		{
			"name": "User",
			"item": [
				{
					"name": "userGet",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Response status code is 200', function () {",
									"    pm.response.to.have.status(200);",
									"})",
									"",
									"pm.test('Response has the required fields', function () {",
									"    const responseData = pm.response.json();",
									"    pm.expect(responseData).to.be.an('object');",
									"    pm.expect(responseData.firstName).to.exist;",
									"    pm.expect(responseData.lastName).to.exist;",
									"    pm.expect(responseData.email).to.exist;",
									"    pm.expect(responseData.phoneNumber).to.exist;",
									"    pm.expect(responseData.password).to.exist;",
									"})",
									"",
									"pm.test('Email is in a valid format', function () {",
									"    const responseData = pm.response.json();",
									"    pm.expect(responseData.email).to.match(/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/, 'Email is not in a valid format');",
									"})",
									"",
									"pm.test('Phone number is in a valid format', function () {",
									"    const responseData = pm.response.json();",
									"    pm.expect(responseData).to.be.an('object');",
									"    pm.expect(responseData.phoneNumber).to.exist.and.to.match(/^[0-9\\+]+$/);",
									"})",
									"",
									"pm.test('OrderIds should be null or an array', function () {",
									"    const responseData = pm.response.json();",
									"    pm.expect(responseData.orderIds).to.satisfy(function (value) {",
									"        return value === null || Array.isArray(value);",
									"    });",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/users/2",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"users",
								"2"
							]
						}
					},
					"response": []
				},
				{
					"name": "userCreate",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"firstName\": \"eklf\",\r\n    \"lastName\": \"efsf\",\r\n    \"email\": \"1278880006267@mail.com\",\r\n    \"phoneNumber\": \"1000473467\",\r\n    \"password\": \"asdad9dkl\",\r\n    \"orderIds\": null\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/users",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "userUpdate",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"firstName\": \"eklf\",\r\n    \"lastName\": \"efsf\",\r\n    \"email\": \"1231288888@mail.com\",\r\n    \"phoneNumber\": \"14534873467\",\r\n    \"password\": \"asdad9dkl\",\r\n    \"orderIds\": null,\r\n    \"id\": 12\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/users",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "userDelete",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/users/18",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"users",
								"18"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Tag",
			"item": [
				{
					"name": "tagCreate",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\":\"hdsa\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/tags",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"tags"
							]
						}
					},
					"response": []
				},
				{
					"name": "tagGet",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/tags/1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"tags",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "tagUpdate",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id\":1,\r\n    \"name\":\"gsa\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/tags",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"tags"
							]
						}
					},
					"response": []
				},
				{
					"name": "tagDelete",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/tags/1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"tags",
								"1"
							]
						}
					},
					"response": []
				}
			]
		}
	]
}